# ==================== BASIC SETTINGS ====================
# Change prefix key to Ctrl-a (like screen)
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

# Enable mouse support
set -g mouse on

# Increase scrollback buffer size
set -g history-limit 50000

# Display messages for 2 seconds
set -g display-time 2000

# Refresh status bar every 5 seconds
set -g status-interval 5

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Better window naming
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g allow-rename off

# Enable focus events for vim compatibility
set -g focus-events on
set -g allow-passthrough on

# Ensure Base16 shell theme is loaded in tmux panes
set-option -g default-command "exec zsh"

# ==================== VI MODE ====================
# Use vi-mode keys in copy mode
setw -g mode-keys vi

# Vi-like copy mode bindings
unbind-key -T copy-mode-vi v

bind-key -T copy-mode-vi v \
  send-keys -X begin-selection

bind-key -T copy-mode-vi 'C-v' \
  send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y \
  send-keys -X copy-pipe-and-cancel "pbcopy"

bind-key -T copy-mode-vi MouseDragEnd1Pane \
  send-keys -X copy-pipe-and-cancel "pbcopy"

bind-key -T copy-mode-vi 'Escape' send -X cancel

# Enter copy mode with Ctrl-a [
bind [ copy-mode
bind ] paste-buffer

# ==================== PANE NAVIGATION (VIM-TMUX-NAVIGATOR) ====================
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Fallback vim-like keys with prefix
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes with vim-like keys (uppercase)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Split panes with \ and - (more intuitive)
bind '\' split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# Quick pane cycling with Alt+p (changed from Alt+o to avoid sessionx conflict)
bind -n M-p select-pane -t :.+

# ==================== WINDOW MANAGEMENT ====================
# Create new window in current path
bind c new-window -c "#{pane_current_path}"

# Quick window switching with Alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Move windows left/right
bind -r C-h swap-window -t -1
bind -r C-l swap-window -t +1

# ==================== SESSION MANAGEMENT ====================
# Session switching with fzf (if available)
bind S display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Quick session creation
bind N command-prompt "new-session -s '%%'"

# ==================== USEFUL SHORTCUTS ====================
# Reload configuration file
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Clear screen and scrollback history
bind C-k send-keys -R \; send-keys C-l \; clear-history

# Toggle synchronize-panes
bind y setw synchronize-panes

# Break pane into new window
bind b break-pane -d

# Kill pane without confirmation
bind x kill-pane

# Kill window without confirmation
bind & kill-window


# ==================== STATUS BAR CONFIGURATION ====================
# Status bar position
set -g status-position bottom

# Base16 Default Dark theme colors
set-option -g status-justify left
set-option -g status-left ''
set-option -g status-left-length 0
set-option -g status-bg '#181818'
set-option -g status-right '#[bg=#383838]#[fg=#86c1b9] CPU:#(top -l 1 | grep -E "^CPU" | awk "{print \$3}") #[bg=#282828]#[fg=#f7ca88] MEM:#(vm_stat | grep "Pages active" | awk "{print \$3}" | tr -d "." | awk "{print int(\$1 * 16384 / 1024 / 1024) \"MB\"}") #[bg=#383838]#[fg=#d8d8d8] %a %R #[bg=#181818] '
set-option -g status-interval 15

set-option -g pane-active-border-style fg='#7cafc2'
set-option -g pane-border-style fg='#383838'

set-window-option -g window-status-format '#[bg=#282828]#[fg=#b8b8b8] #I #[bg=#383838]#[fg=#d8d8d8] #W#[bg=#282828] '
set-window-option -g window-status-current-format '#[bg=#7cafc2]#[fg=#181818] #I #[bg=#a1b56c]#[fg=#181818] #W #[bg=#181818] '

# ==================== PANE BORDERS ====================
# Pane borders are now set in the colorful theme section above

# ==================== MESSAGE COLORS ====================
set -g message-style bg='#7cafc2',fg='#181818'
set -g message-command-style bg='#7cafc2',fg='#181818'

# ==================== ACTIVITY MONITORING ====================
# Monitor for activity in background windows
setw -g monitor-activity on
set -g visual-activity off

# Activity notification colors
setw -g window-status-activity-style bg='#ab4642',fg='#d8d8d8'

# ==================== CLIPBOARD INTEGRATION ====================
# macOS clipboard integration
if-shell "uname | grep -q Darwin" {
    bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy'
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'pbcopy'
}

# Linux clipboard integration (using xclip)
if-shell "uname | grep -q Linux" {
    bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
}

# ==================== PLUGIN MANAGEMENT ====================
# TPM (Tmux Plugin Manager)
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'omerxx/tmux-sessionx'

# ==================== PLUGIN CONFIGURATION ====================
# tmux-resurrect settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# tmux-continuum settings
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# tmux-yank settings
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe-no-clear'
set -g @yank_with_mouse on

# tmux-sessionx settings
set -g @sessionx-bind 'o'
set -g @sessionx-x-path '~/projects'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-preview-enabled 'true'

# tmux-sessionx replaces custom session switching
# Use Ctrl-a o to open sessionx (configured above)
# Backup session switching (if sessionx not available)
bind S display-popup -E "tmux list-sessions -F '#S: #{session_windows} windows#{?session_attached, (attached),}' | fzf --reverse --header='Switch Session' | cut -d: -f1 | xargs tmux switch-client -t"

# Initialize TPM (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
